name: Release passage-ios
on:
  workflow_dispatch:
    inputs:
      release-type:
        required: true
        type: choice
        description: What type of release
        options:
          - major
          - minor
          - patch
# env:
#   BRANCH: ${GITHUB_REF_NAME}

jobs:
  build-documentation:
    name: Generate Documentation
    runs-on: macos-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Documentation
        run: xcodebuild docbuild -scheme Passage -destination generic/platform=iOS  OTHER_DOCC_FLAGS="--transform-for-static-hosting --output-path docs --hosting-base-path passage-ios"

      - name: Generate doccarchive
        run: xcodebuild docbuild -scheme Passage -derivedDataPath ./tmpdocs -destination generic/platform=iOS

      - name: Create doc archive
        run: |
          pushd tmpdocs/Build/Products/Debug-iphoneos
          zip -r $OLDPWD/docs/Passage.doccarchive.zip Passage.doccarchive
          popd
          rm -rf tmpdocs

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Generated and Updated Documentation

  bump-major:
    needs: build-documentation
    if: ${{ github.event.inputs.release-type }} == 'major'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Previous Tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0
      - name: Get Next Version
        id: nexttag
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: Configure Branch and new Version
        id: newversion
        run: |
          echo "version=${{ steps.nexttag.outputs.major }}" >> $GITHUB_OUTPUT
      - name: Update version
        id: update-settings-version
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: "settings.json"
          dir: "./Sources/Passage/Resources/"
          json: "{\n\t\"version\": \"${{ steps.newversion.outputs.version }}\"\n}"

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Generated and Updated Version to ${{ steps.newversion.outputs.version }}"

  bump-minor:
    needs: build-documentation
    if: ${{ github.event.inputs.release-type }} == 'minor'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Previous Tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0
      - name: Get Next Version
        id: nexttag
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: Configure Branch and new Version
        id: newversion
        run: |
          echo "version=${{ steps.nexttag.outputs.minor }}" >> $GITHUB_OUTPUT
      - name: Update version
        id: update-settings-version
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: "settings.json"
          dir: "./Sources/Passage/Resources/"
          json: "{\n\t\"version\": \"${{ steps.newversion.outputs.version }}\"\n}"

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Generated and Updated Version to ${{ steps.newversion.outputs.version }}"

  bump-patch:
    needs: build-documentation
    if: ${{ github.event.inputs.release-type }} == 'patch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get Previous Tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 0.0.0
      - name: Get Next Version
        id: nexttag
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: Configure Branch and new Version
        id: newversion
        run: |
          echo "version=${{ steps.nexttag.outputs.patch }}" >> $GITHUB_OUTPUT
      - name: Update version
        id: update-settings-version
        uses: jsdaniell/create-json@v1.2.2
        with:
          name: "settings.json"
          dir: "./Sources/Passage/Resources/"
          json: "{\n\t\"version\": \"${{ steps.newversion.outputs.version }}\"\n}"

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Generated and Updated Version to ${{ steps.newversion.outputs.version }}"
