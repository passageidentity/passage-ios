//
// PasskeyReadinessAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class PasskeyReadinessAPI {

    /**
     Create Passkey Readiness Analytics
     
     - parameter createPasskeyReadinessRequest: (body) Passkey readiness metrics 
     - parameter userAgent: (header)  (optional)
     - parameter origin: (header) url for passkey readiness (optional)
     - parameter deviceOS: (header) device os - mobile only (optional)
     - parameter deviceOSVersion: (header) device os version - mobile only (optional)
     - parameter appIdentifier: (header) app identifier - mobile only (optional)
     - returns: Void
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func createPasskeyReadiness(createPasskeyReadinessRequest: CreatePasskeyReadinessRequest, userAgent: String? = nil, origin: String? = nil, deviceOS: String? = nil, deviceOSVersion: String? = nil, appIdentifier: String? = nil) async throws {
        return try await createPasskeyReadinessWithRequestBuilder(createPasskeyReadinessRequest: createPasskeyReadinessRequest, userAgent: userAgent, origin: origin, deviceOS: deviceOS, deviceOSVersion: deviceOSVersion, appIdentifier: appIdentifier).execute().body
    }

    /**
     Create Passkey Readiness Analytics
     - POST /analytics/passkey-readiness
     - Sends device's WebAuthn passkey readiness metrics
     - API Key:
       - type: apiKey X-API-KEY (HEADER)
       - name: ApiKeyAuth
     - parameter createPasskeyReadinessRequest: (body) Passkey readiness metrics 
     - parameter userAgent: (header)  (optional)
     - parameter origin: (header) url for passkey readiness (optional)
     - parameter deviceOS: (header) device os - mobile only (optional)
     - parameter deviceOSVersion: (header) device os version - mobile only (optional)
     - parameter appIdentifier: (header) app identifier - mobile only (optional)
     - returns: RequestBuilder<Void> 
     */
    open class func createPasskeyReadinessWithRequestBuilder(createPasskeyReadinessRequest: CreatePasskeyReadinessRequest, userAgent: String? = nil, origin: String? = nil, deviceOS: String? = nil, deviceOSVersion: String? = nil, appIdentifier: String? = nil) -> RequestBuilder<Void> {
        let localVariablePath = "/analytics/passkey-readiness"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: createPasskeyReadinessRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
            "User-Agent": userAgent?.encodeToJSON(),
            "Origin": origin?.encodeToJSON(),
            "Device-OS": deviceOS?.encodeToJSON(),
            "Device-OS-Version": deviceOSVersion?.encodeToJSON(),
            "App-Identifier": appIdentifier?.encodeToJSON(),
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
