//
// MagicLinkAuthMethod.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MagicLinkAuthMethod: Codable, JSONEncodable, Hashable {

    static let ttlRule = NumericRule<Int>(minimum: 60, exclusiveMinimum: false, maximum: nil, exclusiveMaximum: false, multipleOf: nil)
    /** Maximum time (IN SECONDS) for the auth to expire. */
    public var ttl: Int? = 300
    @available(*, deprecated, message: "This property is deprecated.")
    public var ttlDisplayUnit: TtlDisplayUnit?

    public init(ttl: Int? = 300, ttlDisplayUnit: TtlDisplayUnit? = nil) {
        self.ttl = ttl
        self.ttlDisplayUnit = ttlDisplayUnit
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case ttl
        case ttlDisplayUnit = "ttl_display_unit"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(ttl, forKey: .ttl)
        try container.encodeIfPresent(ttlDisplayUnit, forKey: .ttlDisplayUnit)
    }
}

