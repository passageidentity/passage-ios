//
// ElementCustomization.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ElementCustomization: Codable, JSONEncodable, Hashable {

    /** Container background color in hex. Default is `#ffffff` in light mode & `#383838` in dark mode.  */
    public var passageContainerBackgroundColor: String?
    /** Maximum width of container (px) */
    public var passageContainerMaxWidth: Int? = 300
    /** Input box background color in hex. Default is `#ffffff` in light mode & `#4b4b4b` in dark mode.  */
    public var passageInputBoxBackgroundColor: String?
    /** Input box border radius (px) */
    public var passageInputBoxBorderRadius: Int? = 5
    public var passageHeaderFontFamily: FontFamily?
    public var passageBodyFontFamily: FontFamily?
    /** Header text color in hex. Default is `#222222` in light mode & `#f3f3f3` in dark mode.  */
    public var passageHeaderTextColor: String?
    /** Body text color in hex. Default is `#222222` in light mode & `#f3f3f3` in dark mode.  */
    public var passageBodyTextColor: String?
    /** Primary button background colour (hex) */
    public var passagePrimaryButtonBackgroundColor: String? = "#121212"
    /** Primary button font colour (hex) */
    public var passagePrimaryButtonTextColor: String? = "#f3f3f3"
    /** Primary button background on hover (hex) */
    public var passagePrimaryButtonHoverColor: String? = "#4d4d4d"
    /** Primary button border radius (px) */
    public var passagePrimaryButtonBorderRadius: Int? = 5
    /** Primary button border color */
    public var passagePrimaryButtonBorderColor: String? = "#121212"
    /** Primary button border width (px) */
    public var passagePrimaryButtonBorderWidth: Int? = 0
    /** Secondary button background colour (hex) */
    public var passageSecondaryButtonBackgroundColor: String? = "#ffffff"
    /** Secondary button font colour (hex) */
    public var passageSecondaryButtonTextColor: String? = "#222222"
    /** Secondary button background on hover (hex) */
    public var passageSecondaryButtonHoverColor: String? = "#d7d7d7"
    /** Secondary button border radius (px) */
    public var passageSecondaryButtonBorderRadius: Int? = 5
    /** Secondary button border color */
    public var passageSecondaryButtonBorderColor: String? = "#d7d7d7"
    /** Secondary button border width (px) */
    public var passageSecondaryButtonBorderWidth: Int? = 1

    public init(passageContainerBackgroundColor: String? = nil, passageContainerMaxWidth: Int? = 300, passageInputBoxBackgroundColor: String? = nil, passageInputBoxBorderRadius: Int? = 5, passageHeaderFontFamily: FontFamily? = nil, passageBodyFontFamily: FontFamily? = nil, passageHeaderTextColor: String? = nil, passageBodyTextColor: String? = nil, passagePrimaryButtonBackgroundColor: String? = "#121212", passagePrimaryButtonTextColor: String? = "#f3f3f3", passagePrimaryButtonHoverColor: String? = "#4d4d4d", passagePrimaryButtonBorderRadius: Int? = 5, passagePrimaryButtonBorderColor: String? = "#121212", passagePrimaryButtonBorderWidth: Int? = 0, passageSecondaryButtonBackgroundColor: String? = "#ffffff", passageSecondaryButtonTextColor: String? = "#222222", passageSecondaryButtonHoverColor: String? = "#d7d7d7", passageSecondaryButtonBorderRadius: Int? = 5, passageSecondaryButtonBorderColor: String? = "#d7d7d7", passageSecondaryButtonBorderWidth: Int? = 1) {
        self.passageContainerBackgroundColor = passageContainerBackgroundColor
        self.passageContainerMaxWidth = passageContainerMaxWidth
        self.passageInputBoxBackgroundColor = passageInputBoxBackgroundColor
        self.passageInputBoxBorderRadius = passageInputBoxBorderRadius
        self.passageHeaderFontFamily = passageHeaderFontFamily
        self.passageBodyFontFamily = passageBodyFontFamily
        self.passageHeaderTextColor = passageHeaderTextColor
        self.passageBodyTextColor = passageBodyTextColor
        self.passagePrimaryButtonBackgroundColor = passagePrimaryButtonBackgroundColor
        self.passagePrimaryButtonTextColor = passagePrimaryButtonTextColor
        self.passagePrimaryButtonHoverColor = passagePrimaryButtonHoverColor
        self.passagePrimaryButtonBorderRadius = passagePrimaryButtonBorderRadius
        self.passagePrimaryButtonBorderColor = passagePrimaryButtonBorderColor
        self.passagePrimaryButtonBorderWidth = passagePrimaryButtonBorderWidth
        self.passageSecondaryButtonBackgroundColor = passageSecondaryButtonBackgroundColor
        self.passageSecondaryButtonTextColor = passageSecondaryButtonTextColor
        self.passageSecondaryButtonHoverColor = passageSecondaryButtonHoverColor
        self.passageSecondaryButtonBorderRadius = passageSecondaryButtonBorderRadius
        self.passageSecondaryButtonBorderColor = passageSecondaryButtonBorderColor
        self.passageSecondaryButtonBorderWidth = passageSecondaryButtonBorderWidth
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case passageContainerBackgroundColor = "passage_container_background_color"
        case passageContainerMaxWidth = "passage_container_max_width"
        case passageInputBoxBackgroundColor = "passage_input_box_background_color"
        case passageInputBoxBorderRadius = "passage_input_box_border_radius"
        case passageHeaderFontFamily = "passage_header_font_family"
        case passageBodyFontFamily = "passage_body_font_family"
        case passageHeaderTextColor = "passage_header_text_color"
        case passageBodyTextColor = "passage_body_text_color"
        case passagePrimaryButtonBackgroundColor = "passage_primary_button_background_color"
        case passagePrimaryButtonTextColor = "passage_primary_button_text_color"
        case passagePrimaryButtonHoverColor = "passage_primary_button_hover_color"
        case passagePrimaryButtonBorderRadius = "passage_primary_button_border_radius"
        case passagePrimaryButtonBorderColor = "passage_primary_button_border_color"
        case passagePrimaryButtonBorderWidth = "passage_primary_button_border_width"
        case passageSecondaryButtonBackgroundColor = "passage_secondary_button_background_color"
        case passageSecondaryButtonTextColor = "passage_secondary_button_text_color"
        case passageSecondaryButtonHoverColor = "passage_secondary_button_hover_color"
        case passageSecondaryButtonBorderRadius = "passage_secondary_button_border_radius"
        case passageSecondaryButtonBorderColor = "passage_secondary_button_border_color"
        case passageSecondaryButtonBorderWidth = "passage_secondary_button_border_width"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(passageContainerBackgroundColor, forKey: .passageContainerBackgroundColor)
        try container.encodeIfPresent(passageContainerMaxWidth, forKey: .passageContainerMaxWidth)
        try container.encodeIfPresent(passageInputBoxBackgroundColor, forKey: .passageInputBoxBackgroundColor)
        try container.encodeIfPresent(passageInputBoxBorderRadius, forKey: .passageInputBoxBorderRadius)
        try container.encodeIfPresent(passageHeaderFontFamily, forKey: .passageHeaderFontFamily)
        try container.encodeIfPresent(passageBodyFontFamily, forKey: .passageBodyFontFamily)
        try container.encodeIfPresent(passageHeaderTextColor, forKey: .passageHeaderTextColor)
        try container.encodeIfPresent(passageBodyTextColor, forKey: .passageBodyTextColor)
        try container.encodeIfPresent(passagePrimaryButtonBackgroundColor, forKey: .passagePrimaryButtonBackgroundColor)
        try container.encodeIfPresent(passagePrimaryButtonTextColor, forKey: .passagePrimaryButtonTextColor)
        try container.encodeIfPresent(passagePrimaryButtonHoverColor, forKey: .passagePrimaryButtonHoverColor)
        try container.encodeIfPresent(passagePrimaryButtonBorderRadius, forKey: .passagePrimaryButtonBorderRadius)
        try container.encodeIfPresent(passagePrimaryButtonBorderColor, forKey: .passagePrimaryButtonBorderColor)
        try container.encodeIfPresent(passagePrimaryButtonBorderWidth, forKey: .passagePrimaryButtonBorderWidth)
        try container.encodeIfPresent(passageSecondaryButtonBackgroundColor, forKey: .passageSecondaryButtonBackgroundColor)
        try container.encodeIfPresent(passageSecondaryButtonTextColor, forKey: .passageSecondaryButtonTextColor)
        try container.encodeIfPresent(passageSecondaryButtonHoverColor, forKey: .passageSecondaryButtonHoverColor)
        try container.encodeIfPresent(passageSecondaryButtonBorderRadius, forKey: .passageSecondaryButtonBorderRadius)
        try container.encodeIfPresent(passageSecondaryButtonBorderColor, forKey: .passageSecondaryButtonBorderColor)
        try container.encodeIfPresent(passageSecondaryButtonBorderWidth, forKey: .passageSecondaryButtonBorderWidth)
    }
}

