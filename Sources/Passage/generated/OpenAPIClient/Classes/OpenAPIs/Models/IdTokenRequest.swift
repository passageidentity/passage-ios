//
// IdTokenRequest.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct IdTokenRequest: Codable, JSONEncodable, Hashable {

    public enum ConnectionType: String, Codable, CaseIterable {
        case apple = "apple"
        case google = "google"
    }
    /** The code given from the native mobile OS to create a token */
    public var code: String
    /** The identity JWT token with security claims for validation */
    public var idToken: String
    /** Connection type; google or apple */
    public var connectionType: ConnectionType

    public init(code: String, idToken: String, connectionType: ConnectionType) {
        self.code = code
        self.idToken = idToken
        self.connectionType = connectionType
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case code
        case idToken = "id_token"
        case connectionType = "connection_type"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(code, forKey: .code)
        try container.encode(idToken, forKey: .idToken)
        try container.encode(connectionType, forKey: .connectionType)
    }
}

