{"hierarchy":{"paths":[["doc:\/\/Passage\/documentation\/Passage"]]},"metadata":{"modules":[{"name":"Passage"}],"title":"Guide PasskeyAutofill","roleHeading":"Article","role":"article"},"kind":"article","abstract":[{"text":"Enable Passkey autofill to make it easier for your users to login with Passkeys.","type":"text"}],"primaryContentSections":[{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"text":"Passkey autofill makes it easy for your users to use Passkeys. If the user already has a passkey on their device they will be able to select it from the keyboard autofill as soon as the focus the identifier input.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"autofill"}]},{"anchor":"How-to-enable","text":"How to enable","type":"heading","level":3},{"text":"Setup Your Input","level":3,"anchor":"Setup-Your-Input","type":"heading"},{"inlineContent":[{"text":"You will need to set the textContentType of your identifier input to be “username”","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"You can set this in interface builder, or in code:","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you have a reference in your controller to identifierField:"}]},{"code":["identifierField.textContentType = \"username\" "],"type":"codeListing","syntax":"swift"},{"level":3,"text":"Start the Autofill Service","type":"heading","anchor":"Start-the-Autofill-Service"},{"inlineContent":[{"type":"text","text":"”””"},{"type":"text","text":" "},{"type":"text","text":"You will need to start the autofill service as early in the process as you can on the View that is rendering your identifier field."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"For example when a view appears:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["    override func viewDidAppear(_ animated: Bool) {","        guard let window = self.view.window else { fatalError(\"The view was not in the app's view hierarchy!\") }","        DispatchQueue.main.asyncAfter(deadline: .now() + 1) {","            Task {","                try await PassageAuth.beginAutoFill(anchor: window, onSuccess: self.onAutofillSuccess, onError: self.onAutofillError, onCancel: nil)","            }","        }","        \/\/ other code","    }"]},{"type":"paragraph","inlineContent":[{"text":"You will need to pass onSuccess, onError, and onCancel methods to handle autofill callbacks, all three are optional but it is recommended you handle onSuccess and OnError at a minimum. So you can respond to the results if they select the passkey to autofill.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["func onAutofillSuccess(authResult: AuthResult) {","    if let token = authResult.auth_token {","        DispatchQueue.main.async {","            self.pushWelcomeViewController(token: token)","        }","    }","}"]},{"type":"codeListing","code":["func onAutofillError(error: Error) {","    DispatchQueue.main.async {","        self.displayError(message: \"Error logging in with autofill\")","    }","}    "],"syntax":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Passage\/documentation\/Passage\/Guide_PasskeyAutofill"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/passage\/guide_passkeyautofill"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"title":"Guides","identifiers":["doc:\/\/Passage\/documentation\/Passage\/Guide_PassageFramework","doc:\/\/Passage\/documentation\/Passage\/Guide_Registration","doc:\/\/Passage\/documentation\/Passage\/Guide_Login","doc:\/\/Passage\/documentation\/Passage\/Guide_SessionManagement"],"generated":true}],"references":{"doc://Passage/documentation/Passage/Guide_SessionManagement":{"role":"article","url":"\/documentation\/passage\/guide_sessionmanagement","identifier":"doc:\/\/Passage\/documentation\/Passage\/Guide_SessionManagement","abstract":[{"text":"This guide provides an overview of how session management is handled using Passage and how to use passage-ios to handle refresh tokens.","type":"text"}],"kind":"article","type":"topic","title":"Session Management"},"doc://Passage/documentation/Passage/Guide_PassageFramework":{"role":"article","url":"\/documentation\/passage\/guide_passageframework","identifier":"doc:\/\/Passage\/documentation\/Passage\/Guide_PassageFramework","abstract":[{"text":"This guide provides a high level view of the passage-ios framework and how to get started with it.","type":"text"}],"kind":"article","type":"topic","title":"Getting Started"},"doc://Passage/documentation/Passage/Guide_Login":{"identifier":"doc:\/\/Passage\/documentation\/Passage\/Guide_Login","role":"article","abstract":[{"type":"text","text":"This guide will explain how to log in users with the passage-ios framework."}],"url":"\/documentation\/passage\/guide_login","title":"Login","kind":"article","type":"topic"},"doc://Passage/documentation/Passage/Guide_Registration":{"identifier":"doc:\/\/Passage\/documentation\/Passage\/Guide_Registration","role":"article","abstract":[{"type":"text","text":"This guide will explain how to register new users with the passage-ios framework."}],"url":"\/documentation\/passage\/guide_registration","title":"User Registration","kind":"article","type":"topic"},"doc://Passage/documentation/Passage":{"kind":"symbol","type":"topic","abstract":[{"text":"Use Passage to add exclusively Passwordless authentication to your iOS Application.","type":"text"}],"url":"\/documentation\/passage","title":"Passage","identifier":"doc:\/\/Passage\/documentation\/Passage","role":"collection"},"autofill":{"alt":"Passkey Autofill","variants":[{"traits":["1x","light"],"url":"\/images\/autofill.gif"}],"identifier":"autofill","type":"image"}}}