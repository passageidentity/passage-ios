{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/passage\/guide_passageframework"]}],"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Passage\/documentation\/Passage\/Guide_PassageFramework"},"abstract":[{"type":"text","text":"This guide provides a high level view of the passage-ios framework and how to get started with it."}],"primaryContentSections":[{"content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"The passage-ios framewok includes classes that provide everything you need to create and authenticate, and manage users in your application.","type":"text"}]},{"level":3,"anchor":"PassageAuth","type":"heading","text":"PassageAuth"},{"inlineContent":[{"type":"text","text":"PassageAuth is the primary class you will work with. It provides the following:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Registration"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Login","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Sign Out (if you use a Passage Token Store)"}]}]},{"content":[{"inlineContent":[{"text":"User Management","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"App Details"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"And More"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"There are 2 ways of using PassageAuth depending on how you want to manage your user’s tokens.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"Type-Methods","text":"Type Methods","level":4},{"inlineContent":[{"type":"text","text":"PassageAuth exposes all methods as Type Methods if you want to manage your user’s token yourself. Using this approach the storage of the user’s tokens is up to you. The methods which return tokens will simply return the tokens for you to manage. To use the type methods simply call the methods on the type:"}],"type":"paragraph"},{"syntax":null,"code":["\/\/ register","let result = try await PassageAuth.register(identifier: 'emailORPhone')","","\/\/ login","let result = try await PassageAuth.login(identifier: 'emailOrPhone')"],"type":"codeListing"},{"text":"Instance Methods","level":4,"type":"heading","anchor":"Instance-Methods"},{"inlineContent":[{"text":"PassageAuth also exposes methods through an Instance. When creating a new instance you can either pass a class that implements the PassageTokenStore protocol or use the shared instance of PassageStore (which is the default if you don’t instantiate with a store). Using this approach the methods will still return the tokens but will also manage the tokens by setting or deleting the tokens in the store for you. To use the instance methods:","type":"text"}],"type":"paragraph"},{"code":["\/\/ instantiate with your own store","let passage = PassageAuth(store: yourStore)","","\/\/ or instantiate using the PassageStore shared instance","let passage = PassageAuth()","","\/\/ register","let result = try await passage.register(identifier: 'emailOrPhone')","","\/\/ login","let result = try await passage.login(identifier: 'emailOrPhone')"],"type":"codeListing","syntax":null},{"anchor":"PassageStore","text":"PassageStore","level":4,"type":"heading"},{"inlineContent":[{"type":"text","text":"The PassageStore class implements the PassageTokenStore protocol and can be used with PassageAuth to manage the storage\/retrieval of your user’s tokens. It is a Singleton class and you use a ‘shared’ instance of it. If you instantiate PassageAuth without a tokenStore, it will use PassageStore.shared to manage your tokens for you."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Implements PassageAuthToken store so it can be used by PassageAuth to manage your tokens for you"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Wraps Keychain to securely store your user’s tokens","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":4,"type":"heading","text":"PassageTokenUtils","anchor":"PassageTokenUtils"},{"inlineContent":[{"type":"text","text":"This class contains both instance and type methods to use when working with a user’s tokens."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Decode tokens","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Check token expiration"}]}]}]},{"inlineContent":[{"text":"Use the type methods you pass a token to each type method.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["let decodedToken = PassageTokenUtils.decode(jwtToken: 'tokenstring')","","let isExpired = PassageTokenUtils.isTokenExpired(decodedToken: decodedToken)"]},{"inlineContent":[{"type":"text","text":"If you want to use the instance methods then you pass the token to the initializer:"}],"type":"paragraph"},{"code":[" let token = PassageTokenUtils(token: 'tokenString')"," let decodedToken = token.decodedToken",""," let isExpired = token.isExpired"],"type":"codeListing","syntax":null},{"type":"heading","text":"Async \/ Handling errors","level":3,"anchor":"Async--Handling-errors"},{"type":"paragraph","inlineContent":[{"text":"Passage methods are all async functions that can throw errors. So you should wrap the calls in a do…catch","type":"text"}]},{"inlineContent":[{"text":"If the wrapping code is async simply use try await:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["do {","    let result = try await PassageAuth.login()","} catch {","    \/\/ handle error","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"Or you can wrap it in a task:"}],"type":"paragraph"},{"code":["Task {","    do {","        let result = try await PassageAuth.login()","    } catch {","        \/\/ handle error","    }","}"],"type":"codeListing","syntax":null}],"kind":"content"}],"sections":[],"metadata":{"role":"article","title":"Getting Started","roleHeading":"Article","modules":[{"name":"Passage"}]},"hierarchy":{"paths":[["doc:\/\/Passage\/documentation\/Passage"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"seeAlsoSections":[{"title":"Guides","identifiers":["doc:\/\/Passage\/documentation\/Passage\/Guide_Registration","doc:\/\/Passage\/documentation\/Passage\/Guide_Login","doc:\/\/Passage\/documentation\/Passage\/Guide_PasskeyAutofill","doc:\/\/Passage\/documentation\/Passage\/Guide_SessionManagement"],"generated":true}],"references":{"doc://Passage/documentation/Passage/Guide_SessionManagement":{"title":"Session Management","role":"article","url":"\/documentation\/passage\/guide_sessionmanagement","identifier":"doc:\/\/Passage\/documentation\/Passage\/Guide_SessionManagement","type":"topic","abstract":[{"type":"text","text":"This guide provides an overview of how session management is handled using Passage and how to use passage-ios to handle refresh tokens."}],"kind":"article"},"doc://Passage/documentation/Passage/Guide_Registration":{"title":"User Registration","role":"article","url":"\/documentation\/passage\/guide_registration","identifier":"doc:\/\/Passage\/documentation\/Passage\/Guide_Registration","type":"topic","abstract":[{"type":"text","text":"This guide will explain how to register new users with the passage-ios framework."}],"kind":"article"},"doc://Passage/documentation/Passage":{"url":"\/documentation\/passage","identifier":"doc:\/\/Passage\/documentation\/Passage","kind":"symbol","type":"topic","title":"Passage","role":"collection","abstract":[{"type":"text","text":"Use Passage to add exclusively Passwordless authentication to your iOS Application."}]},"doc://Passage/documentation/Passage/Guide_PasskeyAutofill":{"type":"topic","title":"Guide PasskeyAutofill","identifier":"doc:\/\/Passage\/documentation\/Passage\/Guide_PasskeyAutofill","kind":"article","url":"\/documentation\/passage\/guide_passkeyautofill","abstract":[{"type":"text","text":"Enable Passkey autofill to make it easier for your users to login with Passkeys."}],"role":"article"},"doc://Passage/documentation/Passage/Guide_Login":{"type":"topic","title":"Login","identifier":"doc:\/\/Passage\/documentation\/Passage\/Guide_Login","kind":"article","url":"\/documentation\/passage\/guide_login","abstract":[{"text":"This guide will explain how to log in users with the passage-ios framework.","type":"text"}],"role":"article"}}}