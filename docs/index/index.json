{"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/passage\/getstarted_passageapplication","title":"Passage Application Setup","type":"article"},{"path":"\/documentation\/passage\/getstarted_associateddomains","title":"Associated Domains","type":"article"},{"path":"\/documentation\/passage\/getstarted_frontend","title":"Adding Passage to Your iOS Application","type":"article"},{"path":"\/documentation\/passage\/getstarted_backend","title":"Adding Passage To Your Backend","type":"article"},{"title":"Guides","type":"groupMarker"},{"path":"\/documentation\/passage\/guide_passageframework","title":"Getting Started","type":"article"},{"path":"\/documentation\/passage\/guide_registration","title":"User Registration","type":"article"},{"path":"\/documentation\/passage\/guide_login","title":"Login","type":"article"},{"path":"\/documentation\/passage\/guide_passkeyautofill","title":"Guide PasskeyAutofill","type":"article"},{"path":"\/documentation\/passage\/guide_sessionmanagement","title":"Session Management","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/passageauth\/init()","title":"init()","type":"init"},{"path":"\/documentation\/passage\/passageauth\/init(tokenstore:)","title":"init(tokenStore: PassageTokenStore)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passageauth\/tokenstore","title":"var tokenStore: PassageTokenStore","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passage\/passageauth\/adddevice()","title":"func addDevice() async throws -> DeviceInfo","type":"method"},{"path":"\/documentation\/passage\/passageauth\/beginautofill(anchor:onsuccess:onerror:oncancel:)-swift.method","title":"func beginAutoFill(anchor: ASPresentationAnchor, onSuccess: ((AuthResult) -> Void)?, onError: ((Error) -> Void)?, onCancel: (() -> Void)?) async throws","type":"method"},{"path":"\/documentation\/passage\/passageauth\/changeemail(newemail:language:)","title":"func changeEmail(newEmail: String, language: String?) async throws -> MagicLink?","type":"method"},{"path":"\/documentation\/passage\/passageauth\/changephone(newphone:language:)","title":"func changePhone(newPhone: String, language: String?) async throws -> MagicLink?","type":"method"},{"path":"\/documentation\/passage\/passageauth\/editdevice(deviceid:friendlyname:)","title":"func editDevice(deviceId: String, friendlyName: String) async throws -> DeviceInfo?","type":"method"},{"path":"\/documentation\/passage\/passageauth\/getauthtoken()","title":"func getAuthToken() async throws -> String","type":"method"},{"path":"\/documentation\/passage\/passageauth\/getcurrentuser()","title":"func getCurrentUser() async throws -> PassageUserInfo?","type":"method"},{"path":"\/documentation\/passage\/passageauth\/getmagiclinkstatus(id:)-swift.method","title":"func getMagicLinkStatus(id: String) async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/listdevices()","title":"func listDevices() async throws -> [DeviceInfo]","type":"method"},{"path":"\/documentation\/passage\/passageauth\/login(identifier:)-swift.method","title":"func login(identifier: String) async throws -> (authResult: AuthResult?, authFallbackResult: AuthFallbackResult?)","type":"method"},{"path":"\/documentation\/passage\/passageauth\/loginwithmagiclink(identifier:)","title":"func loginWithMagicLink(identifier: String) async throws -> MagicLink?","type":"method"},{"path":"\/documentation\/passage\/passageauth\/loginwithpasskey()-swift.method","title":"func loginWithPasskey() async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/magiclinkactivate(usermagiclink:)-swift.method","title":"func magicLinkActivate(userMagicLink: String) async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/onetimepasscodeactivate(otp:otpid:)-swift.method","title":"func oneTimePasscodeActivate(otp: String, otpId: String) async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/refresh()","title":"func refresh() async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/register(identifier:)-swift.method","title":"func register(identifier: String) async throws -> (authResult: AuthResult?, authFallbackResult: AuthFallbackResult?)","type":"method"},{"path":"\/documentation\/passage\/passageauth\/registerwithpasskey(identifier:)","title":"func registerWithPasskey(identifier: String) async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/revokedevice(deviceid:)","title":"func revokeDevice(deviceId: String) async throws","type":"method"},{"path":"\/documentation\/passage\/passageauth\/signout()","title":"func signOut() async throws","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/passage\/passageauth\/adddevice(token:)","title":"static func addDevice(token: String) async throws -> DeviceInfo","type":"method"},{"path":"\/documentation\/passage\/passageauth\/appinfo()","title":"static func appInfo() async throws -> AppInfo?","type":"method"},{"path":"\/documentation\/passage\/passageauth\/beginautofill(anchor:onsuccess:onerror:oncancel:)-swift.type.method","title":"static func beginAutoFill(anchor: ASPresentationAnchor, onSuccess: ((AuthResult) -> Void)?, onError: ((Error) -> Void)?, onCancel: (() -> Void)?) async throws","type":"method"},{"path":"\/documentation\/passage\/passageauth\/changeemail(token:newemail:language:)","title":"static func changeEmail(token: String, newEmail: String, language: String?) async throws -> MagicLink","type":"method"},{"path":"\/documentation\/passage\/passageauth\/changephone(token:newphone:language:)","title":"static func changePhone(token: String, newPhone: String, language: String?) async throws -> MagicLink","type":"method"},{"path":"\/documentation\/passage\/passageauth\/editdevice(token:deviceid:friendlyname:)","title":"static func editDevice(token: String, deviceId: String, friendlyName: String) async throws -> DeviceInfo?","type":"method"},{"path":"\/documentation\/passage\/passageauth\/getauthtoken(authtoken:refreshtoken:)","title":"static func getAuthToken(authToken: String, refreshToken: String?) async throws -> (authToken: String, refreshToken: String?)","type":"method"},{"path":"\/documentation\/passage\/passageauth\/getcurrentuser(token:)","title":"static func getCurrentUser(token: String) async throws -> PassageUserInfo?","type":"method"},{"path":"\/documentation\/passage\/passageauth\/getmagiclinkstatus(id:)-swift.type.method","title":"static func getMagicLinkStatus(id: String) async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/getuser(identifier:)","title":"static func getUser(identifier: String) async throws -> PassageUserInfo?","type":"method"},{"path":"\/documentation\/passage\/passageauth\/identifierexists(identifier:)","title":"static func identifierExists(identifier: String) async throws -> Bool","type":"method"},{"path":"\/documentation\/passage\/passageauth\/listdevices(token:)","title":"static func listDevices(token: String) async throws -> [DeviceInfo]","type":"method"},{"path":"\/documentation\/passage\/passageauth\/login(identifier:)-swift.type.method","title":"static func login(identifier: String) async throws -> (authResult: AuthResult?, authFallbackResult: AuthFallbackResult?)","type":"method"},{"path":"\/documentation\/passage\/passageauth\/loginwithmagiclink(identifier:language:)","title":"static func loginWithMagicLink(identifier: String, language: String?) async throws -> MagicLink","type":"method"},{"path":"\/documentation\/passage\/passageauth\/loginwithpasskey()-swift.type.method","title":"static func loginWithPasskey() async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/magiclinkactivate(usermagiclink:)-swift.type.method","title":"static func magicLinkActivate(userMagicLink: String) async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/newloginmagiclink(identifier:language:)","title":"static func newLoginMagicLink(identifier: String, language: String?) async throws -> MagicLink","type":"method"},{"path":"\/documentation\/passage\/passageauth\/newloginonetimepasscode(identifier:language:)","title":"static func newLoginOneTimePasscode(identifier: String, language: String?) async throws -> OneTimePasscode","type":"method"},{"path":"\/documentation\/passage\/passageauth\/newregistermagiclink(identifier:language:)","title":"static func newRegisterMagicLink(identifier: String, language: String?) async throws -> MagicLink","type":"method"},{"path":"\/documentation\/passage\/passageauth\/newregisteronetimepasscode(identifier:language:)","title":"static func newRegisterOneTimePasscode(identifier: String, language: String?) async throws -> OneTimePasscode","type":"method"},{"path":"\/documentation\/passage\/passageauth\/onetimepasscodeactivate(otp:otpid:)-swift.type.method","title":"static func oneTimePasscodeActivate(otp: String, otpId: String) async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/refresh(refreshtoken:)","title":"static func refresh(refreshToken: String) async throws -> AuthResult","type":"method"},{"path":"\/documentation\/passage\/passageauth\/register(identifier:)-swift.type.method","title":"static func register(identifier: String) async throws -> (authResult: AuthResult?, authFallbackResult: AuthFallbackResult?)","type":"method"},{"path":"\/documentation\/passage\/passageauth\/revokedevice(token:deviceid:)","title":"static func revokeDevice(token: String, deviceId: String) async throws","type":"method"},{"path":"\/documentation\/passage\/passageauth\/signout(refreshtoken:)","title":"static func signOut(refreshToken: String) async throws","type":"method"}],"path":"\/documentation\/passage\/passageauth","title":"PassageAuth","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passage\/passageautofillauthorizationcontroller\/authorizationcontroller(controller:didcompletewithauthorization:)","title":"func authorizationController(controller: ASAuthorizationController, didCompleteWithAuthorization: ASAuthorization)","type":"method"},{"path":"\/documentation\/passage\/passageautofillauthorizationcontroller\/authorizationcontroller(controller:didcompletewitherror:)","title":"func authorizationController(controller: ASAuthorizationController, didCompleteWithError: Error)","type":"method"},{"path":"\/documentation\/passage\/passageautofillauthorizationcontroller\/begin(anchor:onsuccess:onerror:oncancel:)","title":"func begin(anchor: ASPresentationAnchor, onSuccess: ((AuthResult) -> Void)?, onError: ((Error) -> Void)?, onCancel: (() -> Void)?) async throws","type":"method"},{"path":"\/documentation\/passage\/passageautofillauthorizationcontroller\/cancel()","title":"func cancel()","type":"method"},{"path":"\/documentation\/passage\/passageautofillauthorizationcontroller\/presentationanchor(for:)","title":"func presentationAnchor(for: ASAuthorizationController) -> ASPresentationAnchor","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passageautofillauthorizationcontroller\/shared","title":"static let shared: PassageAutofillAuthorizationController","type":"property"}],"path":"\/documentation\/passage\/passageautofillauthorizationcontroller","title":"PassageAutofillAuthorizationController","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passagestore\/authtoken","title":"var authToken: String?","type":"property"},{"path":"\/documentation\/passage\/passagestore\/refreshtoken","title":"var refreshToken: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passage\/passagestore\/cleartokens()","title":"func clearTokens()","type":"method"},{"path":"\/documentation\/passage\/passagestore\/settokens(authresult:)","title":"func setTokens(authResult: AuthResult)","type":"method"},{"path":"\/documentation\/passage\/passagestore\/settokens(authtoken:refreshtoken:)","title":"func setTokens(authToken: String?, refreshToken: String?)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passagestore\/shared","title":"static let shared: PassageStore","type":"property"}],"path":"\/documentation\/passage\/passagestore","title":"PassageStore","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/passagetokenutils\/init(token:)","title":"init(token: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passagetokenutils\/decodedtoken","title":"var decodedToken: [String : Any]","type":"property"},{"path":"\/documentation\/passage\/passagetokenutils\/expirationdate","title":"var expirationDate: Date","type":"property"},{"path":"\/documentation\/passage\/passagetokenutils\/isexpired","title":"var isExpired: Bool","type":"property"},{"path":"\/documentation\/passage\/passagetokenutils\/token","title":"var token: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/passage\/passagetokenutils\/decode(jwttoken:)","title":"static func decode(jwtToken: String) -> [String : Any]","type":"method"},{"path":"\/documentation\/passage\/passagetokenutils\/istokenexpired(decodedtoken:)","title":"static func isTokenExpired(decodedToken: [String : Any]) -> Bool","type":"method"},{"path":"\/documentation\/passage\/passagetokenutils\/istokenexpired(token:)","title":"static func isTokenExpired(token: String) -> Bool","type":"method"}],"path":"\/documentation\/passage\/passagetokenutils","title":"PassageTokenUtils","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/authfallbackresult\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/passage\/authfallbackresult","title":"AuthFallbackResult","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passagetokenstore\/authtoken","title":"var authToken: String?","type":"property"},{"path":"\/documentation\/passage\/passagetokenstore\/refreshtoken","title":"var refreshToken: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passage\/passagetokenstore\/cleartokens()","title":"func clearTokens()","type":"method"},{"path":"\/documentation\/passage\/passagetokenstore\/settokens(authresult:)","title":"func setTokens(authResult: AuthResult)","type":"method"},{"path":"\/documentation\/passage\/passagetokenstore\/settokens(authtoken:refreshtoken:)","title":"func setTokens(authToken: String?, refreshToken: String?)","type":"method"}],"path":"\/documentation\/passage\/passagetokenstore","title":"PassageTokenStore","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/appinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/appinfo\/allowedidentifier","title":"let allowedIdentifier: String","type":"property"},{"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.property","title":"var authFallbackMethod: AuthFallbackMethod?","type":"property"},{"path":"\/documentation\/passage\/appinfo\/authorigin","title":"let authOrigin: String","type":"property"},{"path":"\/documentation\/passage\/appinfo\/ephemeral","title":"let ephemeral: Bool","type":"property"},{"path":"\/documentation\/passage\/appinfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/passage\/appinfo\/loginurl","title":"let loginURL: String","type":"property"},{"path":"\/documentation\/passage\/appinfo\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/passage\/appinfo\/publicsignup","title":"let publicSignup: Bool","type":"property"},{"path":"\/documentation\/passage\/appinfo\/redirecturl","title":"let redirectURL: String","type":"property"},{"path":"\/documentation\/passage\/appinfo\/requireemailverification","title":"let requireEmailVerification: Bool","type":"property"},{"path":"\/documentation\/passage\/appinfo\/requireidentifierverification","title":"let requireIdentifierVerification: Bool","type":"property"},{"path":"\/documentation\/passage\/appinfo\/requiredidentifier","title":"let requiredIdentifier: String","type":"property"},{"path":"\/documentation\/passage\/appinfo\/sessiontimeoutlength","title":"let sessionTimeoutLength: Int","type":"property"},{"path":"\/documentation\/passage\/appinfo\/usermetadataschema","title":"let userMetadataSchema: [UserMetadataSchema]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum\/magiclink","title":"case magicLink","type":"case"},{"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum\/onetimepasscode","title":"case oneTimePasscode","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/passage\/appinfo\/authfallbackmethod-swift.enum","title":"AppInfo.AuthFallbackMethod","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/appinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/appinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/passage\/appinfo","title":"AppInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/authresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/authresult\/authtoken","title":"let authToken: String","type":"property"},{"path":"\/documentation\/passage\/authresult\/redirecturl","title":"let redirectURL: String","type":"property"},{"path":"\/documentation\/passage\/authresult\/refreshtoken","title":"let refreshToken: String?","type":"property"},{"path":"\/documentation\/passage\/authresult\/refreshtokenexpiration","title":"let refreshTokenExpiration: Int?","type":"property"}],"path":"\/documentation\/passage\/authresult","title":"AuthResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/deviceinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/deviceinfo\/createdat","title":"let createdAt: String","type":"property"},{"path":"\/documentation\/passage\/deviceinfo\/credid","title":"let credId: String","type":"property"},{"path":"\/documentation\/passage\/deviceinfo\/friendlyname","title":"let friendlyName: String","type":"property"},{"path":"\/documentation\/passage\/deviceinfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/passage\/deviceinfo\/lastloginat","title":"let lastLoginAt: String","type":"property"},{"path":"\/documentation\/passage\/deviceinfo\/updatedat","title":"let updatedAt: String?","type":"property"},{"path":"\/documentation\/passage\/deviceinfo\/usagecount","title":"let usageCount: Int?","type":"property"},{"path":"\/documentation\/passage\/deviceinfo\/userid","title":"let userId: String","type":"property"}],"path":"\/documentation\/passage\/deviceinfo","title":"DeviceInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/magiclink\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/magiclink\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/passage\/magiclink","title":"MagicLink","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/onetimepasscode\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/onetimepasscode\/id","title":"var id: String","type":"property"}],"path":"\/documentation\/passage\/onetimepasscode","title":"OneTimePasscode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/passageapierrorresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/passage\/passageapierrorresponse","title":"PassageAPIErrorResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/passageerrorresponsebody\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/passage\/passageerrorresponsebody","title":"PassageErrorResponseBody","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/passageuserinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passageuserinfo\/createdat","title":"let createdAt: String?","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/email","title":"let email: String?","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/emailverified","title":"let emailVerified: Bool","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/lastloginat","title":"let lastLoginAt: String?","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/logincount","title":"let loginCount: Int?","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/phone","title":"let phone: String?","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/phoneverified","title":"let phoneVerified: Bool","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/status","title":"let status: String","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/updatedat","title":"let updatedAt: String?","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/usermetadata","title":"var userMetadata: [String : Any]?","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/webauthn","title":"let webauthn: Bool?","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/webauthndevices","title":"let webauthnDevices: [DeviceInfo]?","type":"property"},{"path":"\/documentation\/passage\/passageuserinfo\/webauthntypes","title":"let webauthnTypes: [String]?","type":"property"}],"path":"\/documentation\/passage\/passageuserinfo","title":"PassageUserInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/settings\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/settings\/version","title":"var version: String","type":"property"}],"path":"\/documentation\/passage\/settings","title":"Settings","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passage\/usermetadataschema\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/usermetadataschema\/fieldname","title":"let fieldName: String?","type":"property"},{"path":"\/documentation\/passage\/usermetadataschema\/friendlyname","title":"let friendlyName: String?","type":"property"},{"path":"\/documentation\/passage\/usermetadataschema\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/passage\/usermetadataschema\/profile","title":"let profile: Bool?","type":"property"},{"path":"\/documentation\/passage\/usermetadataschema\/registration","title":"let registration: Bool?","type":"property"},{"path":"\/documentation\/passage\/usermetadataschema\/type","title":"let type: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/usermetadataschema\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/usermetadataschema\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/passage\/usermetadataschema","title":"UserMetadataSchema","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/passage\/passageapierror\/badrequest(_:)","title":"case badRequest(PassageAPIErrorResponse)","type":"case"},{"path":"\/documentation\/passage\/passageapierror\/conflict(_:)","title":"case conflict(PassageAPIErrorResponse)","type":"case"},{"path":"\/documentation\/passage\/passageapierror\/failedresponse(_:)","title":"case failedResponse(PassageAPIErrorResponse)","type":"case"},{"path":"\/documentation\/passage\/passageapierror\/internalservererror(_:)","title":"case internalServerError(PassageAPIErrorResponse)","type":"case"},{"path":"\/documentation\/passage\/passageapierror\/malformedurl","title":"case malformedUrl","type":"case"},{"path":"\/documentation\/passage\/passageapierror\/notfound(_:)","title":"case notFound(PassageAPIErrorResponse)","type":"case"},{"path":"\/documentation\/passage\/passageapierror\/unauthorized(_:)","title":"case unauthorized(PassageAPIErrorResponse)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passageapierror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/passage\/passageapierror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/passage\/passageapierror","title":"PassageAPIError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/passage\/passageasauthorizationerror\/authorizationtypeunknown","title":"case authorizationTypeUnknown","type":"case"},{"path":"\/documentation\/passage\/passageasauthorizationerror\/canceled","title":"case canceled","type":"case"},{"path":"\/documentation\/passage\/passageasauthorizationerror\/credentialregistration","title":"case credentialRegistration","type":"case"},{"path":"\/documentation\/passage\/passageasauthorizationerror\/invalidstartresponse","title":"case invalidStartResponse","type":"case"},{"path":"\/documentation\/passage\/passageasauthorizationerror\/loginfinish","title":"case loginFinish","type":"case"},{"path":"\/documentation\/passage\/passageasauthorizationerror\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/passage\/passageasauthorizationerror\/unknownauthorizationtype","title":"case unknownAuthorizationType","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/passageasauthorizationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/passageasauthorizationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passageasauthorizationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/passage\/passageasauthorizationerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/passage\/passageasauthorizationerror","title":"PassageASAuthorizationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/passage\/passagedeviceerror\/notfound","title":"case notFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/passagedeviceerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/passagedeviceerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passagedeviceerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/passage\/passagedeviceerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/passage\/passagedeviceerror","title":"PassageDeviceError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/passage\/passageerror\/authfallbacksnotsupported","title":"case authFallbacksNotSupported","type":"case"},{"path":"\/documentation\/passage\/passageerror\/invalidappinfo","title":"case invalidAppInfo","type":"case"},{"path":"\/documentation\/passage\/passageerror\/invalidauthfallbackmethod","title":"case invalidAuthFallbackMethod","type":"case"},{"path":"\/documentation\/passage\/passageerror\/unauthorized","title":"case unauthorized","type":"case"},{"path":"\/documentation\/passage\/passageerror\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/passage\/passageerror\/useralreadyexists","title":"case userAlreadyExists","type":"case"},{"path":"\/documentation\/passage\/passageerror\/userdoesnotexist","title":"case userDoesNotExist","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/passageerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/passageerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passageerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/passage\/passageerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/passage\/passageerror","title":"PassageError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/passage\/passageloginerror\/identifierrequired","title":"case identifierRequired","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/passageloginerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/passageloginerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passageloginerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/passage\/passageloginerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/passage\/passageloginerror","title":"PassageLoginError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/passage\/passageregistererror\/publicregistrationdisabled","title":"case publicRegistrationDisabled","type":"case"},{"path":"\/documentation\/passage\/passageregistererror\/useralreadyexists","title":"case userAlreadyExists","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/passageregistererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/passageregistererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passageregistererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/passage\/passageregistererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/passage\/passageregistererror","title":"PassageRegisterError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/passage\/passagesessionerror\/loginrequired","title":"case loginRequired","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/passagesessionerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/passagesessionerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passagesessionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/passage\/passagesessionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/passage\/passagesessionerror","title":"PassageSessionError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/passage\/passagesettingserror\/errorreadingplist","title":"case errorReadingPlist","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/passage\/passagesettingserror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/passage\/passagesettingserror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passage\/passagesettingserror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/passage\/passagesettingserror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/passage\/passagesettingserror","title":"PassageSettingsError","type":"enum"}],"path":"\/documentation\/passage","title":"Passage","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}